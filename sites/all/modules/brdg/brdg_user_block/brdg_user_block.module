<?php

/**
 * @file
 */

/**
 * Implements hook_form_alter()
 */
function brdg_user_block_form_alter(&$form, &$form_state, $form_id) {
	if ($form_id == 'user_admin_account') {
		$account_options = &$form['accounts']['#options'];
		foreach ($account_options as &$account_option) {
			$data = $account_option['operations']['data'];
			$href = explode('/', $data['#href']);
			$uid = $href[1];
			$blacklist = array(
				'#type' => 'link',
				'#title' => t('Add into blacklist'),
				'#href' => 'admin/people/'.$uid.'/black',
				'#options' => array('query' => array('destination' => 'admin/people'))
			);
			$account_option['operations'] = array('data' => array($data, $blacklist));
		}
	}
	if ($form_id == 'user_register_form' || $form_id == "user_profile_form") {
		$form['#validate'][] = 'brgd_user_block_validate_email';
	}
}

// Validate user email
function brgd_user_block_validate_email($form, $form_state) {
	$mail = $form_state['values']['mail'];
	$allowed_email = variable_get('allowed_email', "");
	$allowed_emailes = explode("\r\n", $allowed_email);
	foreach ($allowed_emailes as $allowed_email) {
		if (strpos($mail, $allowed_email) !== FALSE) {
			return;
		}
	}
	form_set_error("mail", "Your email is not allowed by system");
}

/**
 * Implements hook_menu()
 */
function brdg_user_block_menu() {
	$items['admin/people/%user/black'] = array(
		'page callback' => 'brdg_user_block_append_user',
		'page arguments' => array(2),
		'access arguments' => array('add black user'),
	);
	$items['admin/config/system/user_allowed_email'] = array(
		'page callback' => 'drupal_get_form',
		'page arguments' => array('brdg_user_allowed_email_page'),
		'access arguments' => array('admin allowed email'),
	);
	$items['user/%user/block'] = array(
		'page callback' => 'brdg_user',
	);
	return $items;
}

// Allowed email
function brdg_user_allowed_email_page() {
	$form['allowed_email'] = array(
		'#type' => 'textarea',
		'#title' => t('Allowed Email'),
		'#description' => t(" .."),
		'#default_value' => variable_get('allowed_email', ""),
	);

	return system_settings_form($form);
}

// append user into blackuser list
function brdg_user_block_append_user($user) {
	$black_user = variable_get('brdg_black_user', array());
	if (!in_array($user->uid, $black_user)) {
		$black_user[] = $user->uid;
		variable_set('brdg_black_user', $black_user);
	}
	drupal_goto(drupal_get_destination());
}

/**
 * Implements hook_permission()
 */
function brdg_user_block_permission() {
	return array(
			'add block user' => array(
				'title' => t('Append user into blackuser list'),
			'admin allowed email' => array(
				'title' => t('Allowed Email'),
			),
		),
	);
}

// Helper function to load black user.
function brdg_user_block_list() {
	$black_user = variable_get('brdg_black_user', array());
	return user_load_multiple($black_user);
}
